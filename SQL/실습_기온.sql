use sql_analyze;
DROP TABLE TB_TEMPER;
DROP TABLE TB_TEMPER_DATA;

CREATE TABLE TB_TEMPER_DATA
(
  STD_DE VARCHAR(10)
, AREA_CD VARCHAR(3)
, AVG_TEMPER DECIMAL(3, 1)
, MIN_TEMPER DECIMAL(3, 1)
, MAX_TEMPER DECIMAL(3, 1)
);

SELECT COUNT(*) FROM TB_TEMPER_DATA WHERE AREA_CD IS NULL;

-- DELETE FROM TB_TEMPER_DATA WHERE AREA_CD IS NULL;

# TB_TEMPER_DATA = 데이터 레이크
# TB_TEMPER = 정제된 데이터를 넣음alter
CREATE TABLE TB_TEMPER
(
  STD_DE VARCHAR(8)
, AREA_CD VARCHAR(3)
, AVG_TEMPER DECIMAL(3, 1)
, MIN_TEMPER DECIMAL(3, 1)
, MAX_TEMPER DECIMAL(3, 1)
, PRIMARY KEY (STD_DE, AREA_CD)
);
-- ----------------------------------------------------------------------
SELECT * FROM TB_TEMPER_DATA;

SET SQL_SAFE_UPDATES = 0;
DELETE FROM TB_TEMPER_DATA WHERE AREA_CD IS NULL;

INSERT INTO TB_TEMPER
SELECT
   REPLACE(STD_DE, '-', '') AS STD_DE
 , AREA_CD
 , AVG_TEMPER
 , MIN_TEMPER
 , MAX_TEMPER
  FROM TB_TEMPER_DATA;

COMMIT;

-- ----------------------------------------------------------------------
SELECT * FROM TB_TEMPER;
-- ----------------------------------------------------------------------
# 서울시의 최고/최저 온도 및 해당 일자 구하기
# 서울시(조건)의 최고/최저 온도(집계) 및 해당 일자(조회) 구하기
# 집계와 조회는 동시에 불가
# 서울시의 = 조건 & 카테고리

-- 1) 서울시의 역사상 최저 및 최고 온도 구하기.
-- 이게 서브쿼리가 됨

SELECT 
	TEMPER_MIN_MAX_SEOUL.AREA_CD,
    MIN(TEMPER_MIN_MAX_SEOUL.MIN_TEMPER) AS MIN_TEMPER,
    MAX(TEMPER_MIN_MAX_SEOUL.MAX_TEMPER) AS MAX_TEMPER
FROM TB_TEMPER AS TEMPER_MIN_MAX_SEOUL
WHERE TEMPER_MIN_MAX_SEOUL.AREA_CD = '108'
GROUP BY TEMPER_MIN_MAX_SEOUL.AREA_CD;

-- 2) 해당 일자 구하기
SELECT B.AREA_CD,
		B.STD_DE,
        B.MIN_TEMPER,
        B.MAX_TEMPER
FROM (
	SELECT 
		TEMPER_MIN_MAX_SEOUL.AREA_CD,
		MIN(TEMPER_MIN_MAX_SEOUL.MIN_TEMPER) AS MIN_TEMPER,
		MAX(TEMPER_MIN_MAX_SEOUL.MAX_TEMPER) AS MAX_TEMPER
	FROM TB_TEMPER AS TEMPER_MIN_MAX_SEOUL
	WHERE TEMPER_MIN_MAX_SEOUL.AREA_CD = '108'
	GROUP BY TEMPER_MIN_MAX_SEOUL.AREA_CD) AS MINMAX_TEMPER
JOIN TB_TEMPER B ON (B.AREA_CD = MINMAX_TEMPER.AREA_CD AND B.MIN_TEMPER = MINMAX_TEMPER.MIN_TEMPER) # 최저기온 찾기
				 OR	(B.AREA_CD = MINMAX_TEMPER.AREA_CD AND B.MAX_TEMPER = MINMAX_TEMPER.MAX_TEMPER); # 최고기온 찾기
				
# 과제: 본인생일(1112) 기준으로 역사상 서울시의 최고 기온과 최저 기온 및 이에 해당하는 날짜
SELECT * FROM TB_TEMPER;

# 1년 중 평균 일교차가 가장 큰 달을 구하기
SELECT date_format(std_de,'%m') as MM, AVG(MAX_TEMPER - MIN_TEMPER) as DAILY_CROSS
FROM TB_TEMPER
WHERE area_cd ='108'
GROUP BY MM
ORDER BY DAILY_CROSS DESC
LIMIT 1;

# 역사상 일교차가 가장 큰 날, 해당일의 일교차, 최저온도, 최고온도를 구하기
SELECT STD_DE, MAX_TEMPER - MIN_TEMPER as temp_diff, MIN_TEMPER, MAX_TEMPER
FROM TB_TEMPER
ORDER BY temp_diff DESC
LIMIT 1;

SELECT A.STD_DE,
		A.MAX_TEMPER - A.MIN_TEMPER AS DAILY_CROSS,
		A.MAX_TEMPER,
		A.MIN_TEMPER.
        A.AREA_CD
	
FROM (
	SELECT A.STD_DE,
		A.MAX_TEMPER - A.MIN_TEMPER AS DAILY_CROSS,
		A.MAX_TEMPER,
		A.MIN_TEMPER
	FROM TB_TEMPER A
    WHERE A.AREA_CD = '108'
    AND MAX_TEMPER IS NOT NULL
    AND MIN_TEMPER IS NOT NULL
    ORDER BY DAILY_CROSS DESC);
    
    
# 연도 별 평균 기온 변화 확인하기
-- 2010년: ~도. 2011년: ~도...

SELECT * FROM TB_TEMPER;

SELECT B.temp_year, ROUND(AVG(AVG_TEMPER), 2) as avg_temp
FROM (
		SELECT date_format(STD_DE, '%Y') as temp_year, AVG_TEMPER
        FROM TB_TEMPER A
        WHERE A.AREA_CD ='108'
        AND MAX_TEMPER IS NOT NULL
        AND MIN_TEMPER IS NOT NULL
        ) as B
GROUP BY B.temp_year;   

# 연대별 평균 기온을 구해라.
# 1900-1909: 1900년대
# 1910-1919: 1910년대....

# ****GROUP BY CASE문 : CASE문으로 만든 것을 바탕으로 집계하고 싶을 때
SELECT 
		CASE 
			WHEN YYYY BETWEEN 1900 AND 1909 THEN '1900년대'
            WHEN YYYY BETWEEN 1910 AND 1919 THEN '1910년대'
			WHEN YYYY BETWEEN 1920 AND 1929 THEN '1920년대'
			WHEN YYYY BETWEEN 1930 AND 1939 THEN '1930년대'
			WHEN YYYY BETWEEN 1940 AND 1949 THEN '1940년대'
			WHEN YYYY BETWEEN 1950 AND 1959 THEN '1950년대'
			WHEN YYYY BETWEEN 1960 AND 1969 THEN '1960년대'
			WHEN YYYY BETWEEN 1970 AND 1979 THEN '1970년대'
			WHEN YYYY BETWEEN 1980 AND 1989 THEN '1980년대'
			WHEN YYYY BETWEEN 1990 AND 1999 THEN '1990년대'
			WHEN YYYY BETWEEN 2000 AND 2009 THEN '2000년대'
			WHEN YYYY BETWEEN 2010 AND 2019 THEN '2010년대'
			WHEN YYYY BETWEEN 2020 AND 2029 THEN '2020년대'
        END AS '연대',
        AVG(A.AVG_TEMPER) as '평균기온'
        
FROM (SELECT date_format(A.STD_DE, '%Y') as YYYY, 
			ROUND(AVG(AVG_TEMPER),2) as AVG_TEMPER
        FROM TB_TEMPER A
        WHERE A.AREA_CD ='108'
        AND MAX_TEMPER IS NOT NULL
        AND MIN_TEMPER IS NOT NULL
        GROUP BY YYYY
        ) as A
GROUP BY (CASE 
			WHEN YYYY BETWEEN 1900 AND 1909 THEN '1900년대'
            WHEN YYYY BETWEEN 1910 AND 1919 THEN '1910년대'
			WHEN YYYY BETWEEN 1920 AND 1929 THEN '1920년대'
			WHEN YYYY BETWEEN 1930 AND 1939 THEN '1930년대'
			WHEN YYYY BETWEEN 1940 AND 1949 THEN '1940년대'
			WHEN YYYY BETWEEN 1950 AND 1959 THEN '1950년대'
			WHEN YYYY BETWEEN 1960 AND 1969 THEN '1960년대'
			WHEN YYYY BETWEEN 1970 AND 1979 THEN '1970년대'
			WHEN YYYY BETWEEN 1980 AND 1989 THEN '1980년대'
			WHEN YYYY BETWEEN 1990 AND 1999 THEN '1990년대'
			WHEN YYYY BETWEEN 2000 AND 2009 THEN '2000년대'
			WHEN YYYY BETWEEN 2010 AND 2019 THEN '2010년대'
			WHEN YYYY BETWEEN 2020 AND 2029 THEN '2020년대'
        END)
ORDER BY '연대';
   


